"""Initial migration

Revision ID: 4ce8f686c5af
Revises: 
Create Date: 2025-03-29 21:30:38.569794

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '4ce8f686c5af'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('documents', sa.Column('doc_metadata', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.alter_column('documents', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.drop_index('documents_embedding_idx', table_name='documents', postgresql_with={'lists': '100'}, postgresql_using='ivfflat')
    op.create_index(op.f('ix_documents_doc_id'), 'documents', ['doc_id'], unique=False)
    op.drop_column('documents', 'embedding')
    op.drop_column('documents', 'metadata')
    op.create_index(op.f('ix_users_user_id'), 'users', ['user_id'], unique=False)
    op.alter_column('vectorstores', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.drop_constraint('vectorstores_user_id_name_key', 'vectorstores', type_='unique')
    op.create_index(op.f('ix_vectorstores_vectorstore_id'), 'vectorstores', ['vectorstore_id'], unique=False)
    op.create_unique_constraint('uix_user_vectorstore_name', 'vectorstores', ['user_id', 'name'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('uix_user_vectorstore_name', 'vectorstores', type_='unique')
    op.drop_index(op.f('ix_vectorstores_vectorstore_id'), table_name='vectorstores')
    op.create_unique_constraint('vectorstores_user_id_name_key', 'vectorstores', ['user_id', 'name'])
    op.alter_column('vectorstores', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.drop_index(op.f('ix_users_user_id'), table_name='users')
    op.add_column('documents', sa.Column('metadata', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('documents', sa.Column('embedding', sa.NullType(), autoincrement=False, nullable=True))
    op.drop_index(op.f('ix_documents_doc_id'), table_name='documents')
    op.create_index('documents_embedding_idx', 'documents', ['embedding'], unique=False, postgresql_with={'lists': '100'}, postgresql_using='ivfflat')
    op.alter_column('documents', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.drop_column('documents', 'doc_metadata')
    # ### end Alembic commands ###
